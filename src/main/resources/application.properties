# 재웅 DB 설정
#spring.datasource.url=jdbc:mariadb://localhost:3306/keepbara
#spring.datasource.username=root
#spring.datasource.password=Wodnd0613!~
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# 재일 DB 설정
#spring.datasource.url=jdbc:mariadb://localhost:3306/keepbara
#spring.datasource.username=root
#spring.datasource.password=jaeile1

# !!!!!!! 배포 DB및 클라이언트 설정
spring.datasource.url=jdbc:mariadb://localhost:3306/keepbara
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
clova.ocr.secret=${CLOVA_OCR_SECRET}
clova.ocr.invoke-url=${CLOVA_OCR_URL}


spring.application.name=team17poc
server.port=8082

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
server.servlet.session.cookie.same-site=None

# 세션 미전달 문제 해결 위한 추가
server.servlet.session.cookie.secure=true


product.upload-dir=/home/ubuntu/keepbara-images

# application.properties
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springframework=DEBUG

file.upload-dir=C:/upload/images/

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


spring.web.resources.static-locations=classpath:/static/,file:uploads/


# Google OAuth2 로그인

spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Kakao OAuth2 로그인

spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao

# 카카오
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id



spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect


# ocr 관련 부분
ocr.tesseract.path=/usr/bin/tesseract
ocr.language=eng+kor

# Swagger UI 접속 경로 설정
springdoc.swagger-ui.path=/swagger-ui.html

# Swagger JSON 문서 경로 설정
springdoc.api-docs.path=/api-docs

# 요청 방식 기준으로 정렬 (GET, POST, PUT, DELETE 순)
springdoc.swagger-ui.operations-sorter=method

# 태그 이름 기준으로 정렬 (알파벳 순)
springdoc.swagger-ui.tags-sorter=alpha

# 기본 요청/응답 타입
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# 프록시 서버(Nginx 등)에서 전달된 HTTPS 등의 헤더 정보 스프링에서 인식 하는 용도
server.forward-headers-strategy=framework
